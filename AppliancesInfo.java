/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppliancesInfo;



import java.awt.Desktop;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nitro7
 */

public class AppliancesInfo extends javax.swing.JFrame {
    
    private final JFileChooser openFileChooser ;
    private BufferedImage originalBI;
    String recom="By Company";
    String rangeValue = "High";
    private ArrayList<TableData> list = new ArrayList(); // arraylist for storing table data
     private ArrayList<String> categoryList=new ArrayList<String>(); // arraylist for storing category 
    
    
    
    /**
     * Creates new form AppliancesInfo
     */
    public AppliancesInfo() { // constructer of the class ApplianceInfo
        initComponents();
        jRadioButtonCompany.setSelected(true);
        jRadioButtonMedium.setSelected(true);
        
        openFileChooser= new JFileChooser();
        openFileChooser.setCurrentDirectory(new File("c:\\temp"));
        openFileChooser.setFileFilter(new FileNameExtensionFilter("PNF images", "png"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        buttonGroupRecom = new javax.swing.ButtonGroup();
        jMenuItem2 = new javax.swing.JMenuItem();
        buttonGroupRange = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInfo = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabelCat = new javax.swing.JLabel();
        jLabelAppName = new javax.swing.JLabel();
        jRadioButtonNoRecom = new javax.swing.JRadioButton();
        jRadioButtonCompany = new javax.swing.JRadioButton();
        jLabelRecom = new javax.swing.JLabel();
        jLabelModelNo = new javax.swing.JLabel();
        jComboBoxCat = new javax.swing.JComboBox<>();
        jLabelPrice = new javax.swing.JLabel();
        jRadioButtonCommunity = new javax.swing.JRadioButton();
        jTextFieldModNo = new javax.swing.JTextField();
        jTextFieldAppName = new javax.swing.JTextField();
        jTextFieldPrice = new javax.swing.JTextField();
        jLabelRange = new javax.swing.JLabel();
        jRadioButtonLow = new javax.swing.JRadioButton();
        jRadioButtonMedium = new javax.swing.JRadioButton();
        jRadioButtonHigh = new javax.swing.JRadioButton();
        jToolBar1 = new javax.swing.JToolBar();
        jBtnClose = new javax.swing.JButton();
        jPanelSearch = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        jButtonSearchPrice = new javax.swing.JButton();
        categorySearch = new javax.swing.JComboBox<>();
        jButtonSearchCategory = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButtonAddToTable = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        jMenuBarDeveloper = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemOpen = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemImport = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItemAbout = new javax.swing.JMenuItem();

        jScrollPane5.setViewportView(jTextPane4);

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        tblInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Model No.", "Appliances Name", "Category", "Recommendation", "Range", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblInfo);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true)));

        jLabelCat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelCat.setText("Category:");

        jLabelAppName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelAppName.setText("Appliances Name:");

        buttonGroupRecom.add(jRadioButtonNoRecom);
        jRadioButtonNoRecom.setText("No recommendation yet");
        jRadioButtonNoRecom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonNoRecomActionPerformed(evt);
            }
        });

        buttonGroupRecom.add(jRadioButtonCompany);
        jRadioButtonCompany.setText(" By company");
        jRadioButtonCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCompanyActionPerformed(evt);
            }
        });

        jLabelRecom.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelRecom.setText("Recommendation:");

        jLabelModelNo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelModelNo.setText("Model No:");

        jComboBoxCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laptop", "Printer", "Scanner", "Computer parts", "Gamming Accesories" }));
        jComboBoxCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCatActionPerformed(evt);
            }
        });

        jLabelPrice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelPrice.setText("Price:");

        buttonGroupRecom.add(jRadioButtonCommunity);
        jRadioButtonCommunity.setText("By community");
        jRadioButtonCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCommunityActionPerformed(evt);
            }
        });

        jTextFieldModNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldModNoActionPerformed(evt);
            }
        });

        jTextFieldPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPriceActionPerformed(evt);
            }
        });
        jTextFieldPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPriceKeyTyped(evt);
            }
        });

        jLabelRange.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelRange.setText("Range:");

        buttonGroupRange.add(jRadioButtonLow);
        jRadioButtonLow.setText("Low");
        jRadioButtonLow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonLowActionPerformed(evt);
            }
        });

        buttonGroupRange.add(jRadioButtonMedium);
        jRadioButtonMedium.setText("Medium");
        jRadioButtonMedium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMediumActionPerformed(evt);
            }
        });

        buttonGroupRange.add(jRadioButtonHigh);
        jRadioButtonHigh.setText("High");
        jRadioButtonHigh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonHighActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(43, 43, 43)
                                    .addComponent(jLabelModelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(52, 52, 52)
                                    .addComponent(jLabelCat, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(45, 45, 45))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabelAppName, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(17, 17, 17))
                                .addComponent(jLabelRecom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabelRange, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jRadioButtonLow, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonMedium, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(jRadioButtonHigh, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(249, 249, 249))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jRadioButtonCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxCat, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextFieldAppName, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                                        .addComponent(jTextFieldModNo)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonNoRecom)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelModelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldModNo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldAppName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAppName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCat, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCat, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRecom, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonCompany)
                    .addComponent(jRadioButtonCommunity)
                    .addComponent(jRadioButtonNoRecom, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelRange, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioButtonLow)
                        .addComponent(jRadioButtonMedium)
                        .addComponent(jRadioButtonHigh)))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jToolBar1.setRollover(true);

        jBtnClose.setText("Close");
        jBtnClose.setFocusable(false);
        jBtnClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnClose.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCloseActionPerformed(evt);
            }
        });
        jToolBar1.add(jBtnClose);

        jPanelSearch.setBackground(new java.awt.Color(204, 204, 204));
        jPanelSearch.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 0, 204), 1, true), "Search Here:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 1, 16))); // NOI18N

        txtSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSearchMouseClicked(evt);
            }
        });
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        jButtonSearchPrice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonSearchPrice.setText("By Price");
        jButtonSearchPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchPriceActionPerformed(evt);
            }
        });

        categorySearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laptop", "Printer", "Scanner", "Computer parts", "Gamming Accesories" }));
        categorySearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categorySearchActionPerformed(evt);
            }
        });

        jButtonSearchCategory.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonSearchCategory.setText("By Category");
        jButtonSearchCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchCategoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSearchLayout = new javax.swing.GroupLayout(jPanelSearch);
        jPanelSearch.setLayout(jPanelSearchLayout);
        jPanelSearchLayout.setHorizontalGroup(
            jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSearchLayout.createSequentialGroup()
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSearchPrice)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSearchLayout.createSequentialGroup()
                        .addComponent(jButtonSearchCategory)
                        .addGap(96, 96, 96))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSearchLayout.createSequentialGroup()
                        .addComponent(categorySearch, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70))))
        );
        jPanelSearchLayout.setVerticalGroup(
            jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(categorySearch, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonSearchCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 0, 204), 1, true), "Table Function:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 1, 16))); // NOI18N

        jButtonAddToTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonAddToTable.setText("Add to Table");
        jButtonAddToTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddToTableActionPerformed(evt);
            }
        });

        jButtonClear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonClear.setText("Clear");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jButtonExit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonExit.setText("Exit");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonAddToTable)
                        .addGap(45, 45, 45)
                        .addComponent(jButtonClear))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jButtonExit)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddToTable, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        jMenuItemOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemOpen.setText("Open");
        jMenuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemOpen);
        jMenu1.add(jSeparator1);

        jMenuItemImport.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemImport.setText("Import");
        jMenuItemImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemImportActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemImport);
        jMenu1.add(jSeparator2);

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemExit);

        jMenuBarDeveloper.add(jMenu1);

        jMenuHelp.setText("Help");
        jMenuHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuHelpActionPerformed(evt);
            }
        });

        jMenuItemAbout.setText("About");
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuItemAbout);

        jMenuBarDeveloper.add(jMenuHelp);

        setJMenuBar(jMenuBarDeveloper);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPriceKeyTyped
        // this method let input field to be entered with integer value only
        char key= evt.getKeyChar();
        if(!(key >='0' && key<='9')){
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldPriceKeyTyped

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        // This method closes the system
        System.exit(0);
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        // This method clears the data from input fields
        jTextFieldModNo.setText("");
        jTextFieldAppName.setText("");
        jComboBoxCat.setSelectedIndex(0);
        jRadioButtonCompany.setSelected(true);
        jRadioButtonMedium.setSelected(true);
        jTextFieldPrice.setText("");
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jButtonAddToTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddToTableActionPerformed
        // This method takes the data from input field and add it to table
        try{
            String mdNo = jTextFieldModNo.getText().trim();
            String appName = jTextFieldAppName.getText().trim(); //retriving data from the input feilds
            String categ = jComboBoxCat.getSelectedItem().toString();
            String price= jTextFieldPrice.getText().trim();
            
//            String[] value = {mdNo, appName, categ, recom, rangeValue, price};
            if( !mdNo.isEmpty() && !appName.isEmpty() && !categ.isEmpty() && !price.isEmpty()){
                
                    for(TableData k: list){
                        if(mdNo.equals(k.getMdNo())){
                            JOptionPane.showMessageDialog(rootPane,"Not a unique model number","Error", 0);
                            return;
                        }
                        
                    }
                    
                        int rowCount = tblInfo.getRowCount(); // counts no of row
                        int nextRow= 0; // this show which row is empty
                        boolean emptyRowFlag= false; // this shows whether row is empt or not

                        String s;
                        do{
                            s= (String)tblInfo.getValueAt(nextRow,0); //retruns data in types object  so it is typecasted to String
                            if(s!= null && s.length() != 0){
                                nextRow++;
                            }else{
                                emptyRowFlag= true;
                            }
                        }while(nextRow < rowCount && !emptyRowFlag);

                        if(emptyRowFlag){
                                    String[] value = {mdNo, appName, categ, recom, rangeValue, price};
                                    int colCount= tblInfo.getColumnCount(); // counts no of columns

                                    for(int i=0; i<colCount; i++){
                                        tblInfo.setValueAt(value[i], nextRow,i );
                                    }
                                    TableData row= new TableData(mdNo, appName, categ, recom, rangeValue, price);
                                    list.add(row);
                                    loadToCSV();


                         }else{
                                 JOptionPane.showMessageDialog(rootPane,"No Empty row found!","Error",2);
                        }
                    
                    
            }else{
                                 JOptionPane.showMessageDialog(rootPane,"Do not leave input field empty!", "Error",0);
            }
            
            

        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane,"Eroor while retriving data"
                    + "check the input at first!", "Error",0);
        }
            

    }


    private static void selectionSort(ArrayList<TableData> list){ // this method sorts the data from the table
               
             
            for(int i=0; i<list.size()-1; i++){ // this loop for  placing the element in correct spot
                int meanPos= list.indexOf(list.get(i));
                
                for(int j=i+1; j<list.size(); j++){ // this loop for finding smallest elements
                    int x= Integer.parseInt(list.get(j).getPrice().trim());
                    int y= Integer.parseInt(list.get(meanPos).getPrice().trim());
                    if(x<y){
                        meanPos=list.indexOf(list.get(j));
                    }
                }
                // now swapping the elements
                TableData temp= list.get(i);
                
                list.set(i,list.get(meanPos));
                list.set(meanPos,temp);
               
            }
                
        
        
    }//GEN-LAST:event_jButtonAddToTableActionPerformed

   public void priceSearch(){ //this method search price in the table and respond according to the search file
        try{
            selectionSort(list);
            int value = Integer.parseInt(txtSearch.getText());
            int result = binarySearch(list, 0, list.size()-1,value);
            if(result == -1){//The condition is to check if Search price is not found from table price.
                JOptionPane.showMessageDialog(null, "This Price is not in the table", "NOT AVAILABLE",
                JOptionPane.INFORMATION_MESSAGE);
            }
            else if(tblInfo.getRowCount()==0){
                JOptionPane.showMessageDialog(rootPane, "Table is Empty", "Insert into Table",
                JOptionPane.INFORMATION_MESSAGE);
            }
            else{//The condition gets executed when the table contains the price which is searched in search field along with its consitituent id, Accessories name, category and price range.
                    JOptionPane.showMessageDialog(rootPane, "The price with Rs "+value+" has: - \n Model Number: "+list.get(result).getMdNo()+"\n Appliance Name: "+list.get(result).getAppName()+"\nCategory: "+list.get(result).getCateg()+ "\n Recommendation: "+ list.get(result).getRecom() +"\n Range: "+ list.get(result).getRangeValue());

            }
           
        }
        catch(Exception E){//This is condition Exectued when any exception occurs.
                //lblSearch.setText("**Empty Serach Bar**");
                JOptionPane.showMessageDialog(null, "Enter the Price For Search", "Insert Value",
               JOptionPane.ERROR_MESSAGE);
        }
    }


 
   public void loadToCSV(){ /// this method is for from data.csv
       try{
            File file= new File("C:\\Users\\Nitro7\\Documents\\NetBeansProjects\\Appliances_IS\\data.csv");
            if(!file.isFile()){
                file.createNewFile();
            }
            
            FileWriter wr= new FileWriter(file);
            for(TableData pk :list){
                String value[] = {pk.getMdNo(), pk.getAppName(), pk.getCateg(), pk.getRecom(), pk.getRangeValue(), pk.getPrice()};
                for (int i=0; i< value.length; i++) {
                    wr.append(value[i]);
                    if(i== value.length-1){
                        break;
                    }
                    wr.append(",");
                }
                wr.append("\n");
            }
            wr.flush();
            wr.close();
            
        }catch(IOException ae){
                JOptionPane.showMessageDialog(rootPane, "Error", "Error",JOptionPane.ERROR_MESSAGE);
        }
   }
   
   public String printList(){// This method returns category list
    String val="";
    for(int i=0;i<=categoryList.size()-1;i++){
        val=val+categoryList.get(i)+"\n";
    }
    return val;
 }
   

    /**
 * This method finds the index of the list where the value is stored.
 * @param list a sorted generic ArrayList of CarDetails class
 * @param low the index from where the search starts.
 * @param high the index upto where the search is done.
 * @param value the value to be searched
 * @return the index where the value resides if found, if not found -1 is returned.
 */
 

   private int binarySearch(ArrayList<TableData> list, int low, int high, int search){ 
    if(low<=high){
        int mid = (low+high)/2;
        if(Integer.parseInt(list.get(mid).getPrice()) == search){
            return mid;
        }
        if(Integer.parseInt(list.get(mid).getPrice()) > search){
            return binarySearch(list, low, mid-1, search);

        }
        else{
            return binarySearch(list, mid+1, high, search);
        }
    }
    else{
        return -1;
    }
    
   
 }
  
  
    private void jRadioButtonCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonCompanyActionPerformed
        // this method returns the string value when radio button is clicked
        recom = "By Company";
    }//GEN-LAST:event_jRadioButtonCompanyActionPerformed

    private void jRadioButtonCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonCommunityActionPerformed
        // this method returns the string value when radio button is clicked
        recom = "By Community";
    }//GEN-LAST:event_jRadioButtonCommunityActionPerformed

    private void jRadioButtonNoRecomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonNoRecomActionPerformed
        // this method returns the string value when radio button is clicked
        recom= "No Recommendation yet!";
    }//GEN-LAST:event_jRadioButtonNoRecomActionPerformed

    private void jTextFieldPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPriceActionPerformed

    private void jButtonSearchPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchPriceActionPerformed
        // this method is used to search the price 
        
        
        if(txtSearch.getText().trim().equals("")){
            JOptionPane.showMessageDialog(rootPane,"Please input value in the search price field.","Validation Error",JOptionPane.INFORMATION_MESSAGE);
            return;
         }
        else if(list.isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"There are no items to search!","No Items in Table",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        try
        {
            selectionSort(list); //Calling the sort method with list as argument.
            int searchPrice = Integer.parseInt(txtSearch.getText().trim()); //trim removes the whitespace before and after the words.
           
            int index = binarySearch(list,0,list.size()-1,searchPrice);
            if(index==-1)
            {
                JOptionPane.showMessageDialog(rootPane,"Appliance with price "+ searchPrice+" is not found.","Appliance Not Found",JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane,"The appliance Number is "+ list.get(index).getMdNo()+",\n"
                + "The appliance name is "+list.get(index).getAppName()+",\n"
                + "The Category is "+list.get(index).getCateg()+",\n"
                + "Recommendation "+list.get(index).getRecom()+" \n"
                + "Range " + list.get(index).getRangeValue() +" \n"
                + "The Price is " +searchPrice +" \n","Accessory Found", JOptionPane.INFORMATION_MESSAGE);
                txtSearch.setText("");
                
    
                
            }
            
        }
        catch(NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(rootPane,"Please Enter numeric value in the search field.","Numerical Value not found!",JOptionPane.ERROR_MESSAGE);
        
 }
        
        
    }//GEN-LAST:event_jButtonSearchPriceActionPerformed

    private void jButtonSearchCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchCategoryActionPerformed
        //this method is used to search the category
        
        
        if(list.isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"There are no items to search!","No Items in Table",JOptionPane.INFORMATION_MESSAGE); // error message is displayed when the list is empty
            return;
        }
        String searchCategory = (String)categorySearch.getSelectedItem(); 
        String applianceName = "";
        String details = "";
        int count = 0;
        for(TableData row:list){
            if(row.getCateg().equals(searchCategory)){
            count++;
            applianceName += count+ ". The Appliance Name is "+ row.getAppName()+".\n";
            details += "The Appliance Number is "+row.getMdNo()+",\n"
            + "The Appliance name is "+ row.getAppName()+",\n"
            + "The Category is "+ row.getCateg()+",\n"
            + "Recommended by  "+ row.getRecom() +"\n"
             + "Range " + row.getRangeValue() + "\n "
            + "The Price is " + row.getPrice() +" \n \n";
            }
        }
            if(count == 0){
                JOptionPane.showMessageDialog(rootPane,"Appliance with the "+searchCategory+ "."+" category is not found","Appliance NOT Found",JOptionPane.ERROR_MESSAGE); 
            } else if(count==1){
                JOptionPane.showMessageDialog(rootPane,"There is only one accessory withthe category "+ printList()/*category*/+"\n"+details,"Appliance Found",JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                int input = JOptionPane.showConfirmDialog(rootPane,"There are "+count+" accessories found: \n"
                +applianceName
                + "Do you wish to see the detailed view of the Appliance found?","Appliance Found",JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                //Yes means 0
                if(input == 0){
                JOptionPane.showMessageDialog(rootPane,details,"Accessory Found",JOptionPane.INFORMATION_MESSAGE);
                }
            }
        
    }//GEN-LAST:event_jButtonSearchCategoryActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        // this method let input field to be entered with integer value only
        char key= evt.getKeyChar();
        if(!(key >='0' && key<='9')){
            evt.consume();
        }
    }//GEN-LAST:event_txtSearchKeyTyped

    private void txtSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMouseClicked
        // this method leaves the textfield empty:
        txtSearch.setText("");
    }//GEN-LAST:event_txtSearchMouseClicked

    private void categorySearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categorySearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categorySearchActionPerformed

    private void jComboBoxCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxCatActionPerformed

    private void jMenuHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuHelpActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenuHelpActionPerformed

    private void jBtnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCloseActionPerformed
        // this method closes the system
        System.exit(0);
    }//GEN-LAST:event_jBtnCloseActionPerformed

    private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAboutActionPerformed
        // This method display the developer information when menuItem developer is clicked
        JOptionPane.showMessageDialog(rootPane,"Developer: RPS Company Pvt. Ltd \n Version: 1.0", "Developer Information",
            JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItemAboutActionPerformed

    private void jMenuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenActionPerformed
           int returnValue= openFileChooser.showOpenDialog(this);
           if(returnValue== JFileChooser.APPROVE_OPTION){
               try{
                   originalBI= ImageIO.read(openFileChooser.getSelectedFile());
                   //messsageLabel.setText("Image file Sucessfully loaded!");
                  // JOptionPane.showMessageDialog(rootPane,"Image file Sucessfully loaded!", "Error", JOptionPane.INFORMATION_MESSAGE);
               }catch(IOException ioe){
                   //messageLabel.setText("Failed to load image file!");
                   JOptionPane.showMessageDialog(rootPane,"Failed to load image file!", "Error",
            JOptionPane.ERROR_MESSAGE);
               }
           }
//this method opens the file location
        
    }//GEN-LAST:event_jMenuItemOpenActionPerformed

    private void jMenuItemImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemImportActionPerformed
        // this method imports the data from the data.csv file
        int rowCount = tblInfo.getRowCount(); // counts no of row
        int columnCount= tblInfo.getColumnCount();    
                
        int nextRow= 0; // this show which row is empty
        boolean emptyRowFlag= false; // this shows whether row is empty or not        
        String s;
        
       try{
           BufferedReader bf= new BufferedReader(new FileReader("Data.csv"));
           try{
                    String row= "";
                    while((row= bf.readLine()) != null ){
                        do{
                            s= (String)tblInfo.getValueAt(nextRow,0); //retruns data in types object  so it is typecasted to String
                            if(s!= null && s.length() != 0){
                                nextRow++;
                            }else{
                                emptyRowFlag= true;
                            }
                        }while(nextRow < rowCount && !emptyRowFlag);
                       String[] value = row.split(","); // split the value into different index
                        for(int i=0; i<columnCount; i++){
                                   tblInfo.setValueAt(value[i], nextRow,i);
                               }
                   }
           }catch(ArrayIndexOutOfBoundsException ae){
               JOptionPane.showMessageDialog(rootPane, "No rows are left available to add data!", "Error", JOptionPane.ERROR_MESSAGE);
           }
               
               
        }catch(FileNotFoundException fnfe){
                        JOptionPane.showMessageDialog(rootPane, "File Not Found!", "Error", JOptionPane.ERROR_MESSAGE);
        }catch(IOException ioe){
               JOptionPane.showMessageDialog(rootPane, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
       

        
    }//GEN-LAST:event_jMenuItemImportActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        // This method closes the system
        System.exit(0);
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jRadioButtonLowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonLowActionPerformed
        // TODO add your handling code here:
        rangeValue= "Low";
    }//GEN-LAST:event_jRadioButtonLowActionPerformed

    private void jRadioButtonMediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMediumActionPerformed
        // TODO add your handling code here:
        rangeValue="Medium";
    }//GEN-LAST:event_jRadioButtonMediumActionPerformed

    private void jRadioButtonHighActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonHighActionPerformed
        // TODO add your handling code here:
        rangeValue="High";
    }//GEN-LAST:event_jRadioButtonHighActionPerformed

    private void jTextFieldModNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldModNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldModNoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AppliancesInfo().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupRange;
    private javax.swing.ButtonGroup buttonGroupRecom;
    private javax.swing.JComboBox<String> categorySearch;
    private javax.swing.JButton jBtnClose;
    private javax.swing.JButton jButtonAddToTable;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonSearchCategory;
    private javax.swing.JButton jButtonSearchPrice;
    private javax.swing.JComboBox<String> jComboBoxCat;
    private javax.swing.JLabel jLabelAppName;
    private javax.swing.JLabel jLabelCat;
    private javax.swing.JLabel jLabelModelNo;
    private javax.swing.JLabel jLabelPrice;
    private javax.swing.JLabel jLabelRange;
    private javax.swing.JLabel jLabelRecom;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBarDeveloper;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemImport;
    private javax.swing.JMenuItem jMenuItemOpen;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelSearch;
    private javax.swing.JRadioButton jRadioButtonCommunity;
    private javax.swing.JRadioButton jRadioButtonCompany;
    private javax.swing.JRadioButton jRadioButtonHigh;
    private javax.swing.JRadioButton jRadioButtonLow;
    private javax.swing.JRadioButton jRadioButtonMedium;
    private javax.swing.JRadioButton jRadioButtonNoRecom;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTextField jTextFieldAppName;
    private javax.swing.JTextField jTextFieldModNo;
    private javax.swing.JTextField jTextFieldPrice;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable tblInfo;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
